name: RTD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_nb:
    name: latest-build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout MODFLOW6 examples repo
        uses: actions/checkout@v2

      - name: Output repo information
        run: |
          echo ${{ github.repository_owner }}
          echo ${{ github.repository }}
          echo ${{ github.ref }}

      - name: Setup symbolic link to gfortran
        run: |
          sudo ln -fs /usr/bin/gfortran-9 /usr/local/bin/gfortran
          sudo ln -fs /usr/bin/gcc-9 /usr/local/bin/gcc
          sudo ln -fs /usr/bin/g++-9 /usr/local/bin/g++

      - name: Install additional TrueType fonts
        shell: bash
        run: |
          sudo apt install fonts-liberation

      - name: Cache pip
        uses: actions/cache@v2.1.0
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('etc/requirements.pip.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Print python version
        shell: bash
        run: |
          python --version

      - name: Install Python 3.8 packages
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r etc/requirements.pip.txt
          pip install -r etc/requirements.usgs.txt

      - name: Run get_exes script
        shell: bash
        run: |
          cd ./etc/
          python get_exes.py
          cd ..

      - name: List executables
        shell: bash
        run: |
          ls -la ./bin/

      - name: Run processing script
        shell: bash
        run: |
          cd ./scripts/
          python process-scripts.py
          cd ..

      - name: Run notebooks with jupytext
        shell: python
        run: |
          import os
          import shutil
          # get list of notebooks
          src_pth = os.path.join("notebooks")
          nb_files = [file_name
                      for file_name in sorted(os.listdir(src_pth))
                      if file_name.endswith(".ipynb")]
          # create temporary directory
          dst_pth = os.path.join(".nb")
          if os.path.isdir(dst_pth):
              shutil.rmtree(dst_pth)
          os.makedirs(dst_pth)
          # run the notebooks
          for file_name in nb_files:
              src = os.path.join(src_pth, file_name)
              dst = os.path.join(dst_pth, file_name)
              arg = ("jupytext",
                     "--to ipynb",
                     "--from ipynb",
                     "--execute",
                     "-o",
                     dst,
                     src)
              print(" ".join(arg))
              os.system(" ".join(arg))

      - name: Copy the completed notebook files to .doc/_notebooks
        shell: bash
        run: |
          echo .nb/ contents
          ls -la .nb/

          echo create .doc/_notebooks/
          mkdir -v .doc/_notebooks

          echo copy the notebook files
          cp -v .nb/* .doc/_notebooks/

          echo .doc/_notebooks/ contents
          ls -la .doc/_notebooks/

      - name: Upload completed jupyter notebooks as an artifact for ReadtheDocs
        if: github.repository_owner == 'MODFLOW-USGS' && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v2
        with:
          name: notebooks-for-${{ github.sha }}
          path: |
            .doc/_notebooks


# trigger rtd if previous job was successful
  rtd:
    name: Read the Docs trigger
    needs: build_nb
    runs-on: ubuntu-latest

    if:
      github.repository_owner == 'MODFLOW-USGS' && github.ref == 'refs/heads/master'
    steps:
      - name: Trigger RTDs build 
        uses: dfm/rtds-action@v1.0.0
        with:
          webhook_url: ${{ secrets.RTDS_WEBHOOK_URL }}
          webhook_token: ${{ secrets.RTDS_WEBHOOK_TOKEN }}
          commit_ref: ${{ github.ref }}

