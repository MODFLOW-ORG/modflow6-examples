name: CI

on:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: current-build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout MODFLOW6 examples repo
        uses: actions/checkout@v2

      - name: Output repo information
        run: |
          echo ${{ github.repository_owner }}
          echo ${{ github.repository }}
          echo ${{ github.ref }}
          echo ${{ github.event_name }}
          echo ${{ github.sha }}

      - name: Setup symbolic link to gfortran
        run: |
          sudo ln -fs /usr/bin/gfortran-9 /usr/local/bin/gfortran
          sudo ln -fs /usr/bin/gcc-9 /usr/local/bin/gcc
          sudo ln -fs /usr/bin/g++-9 /usr/local/bin/g++

      - name: Install TeX Live and additional TrueType fonts
        shell: bash
        run: |
          sudo apt install texlive-latex-extra texlive-science fonts-liberation

      - name: Cache pip
        uses: actions/cache@v2.1.0
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('etc/requirements.pip.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Print python version
        shell: bash
        run: |
          python --version

      - name: Install Python 3.8 packages
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install -r etc/requirements.pip.txt
          pip install -r etc/requirements.usgs.txt

      - name: Run get_exes script
        shell: bash
        run: |
          cd ./etc/
          python ci_get_exes.py
          cd ..

      - name: List executables
        shell: bash
        run: |
          ls -l ./bin/

      - name: Run scripts without model runs and zip input files
        shell: bash
        run: |
          cd ./etc/
          python ci_build_files.py --zip
          cd ..

      - name: Run script to create the LaTeX package summary table
        shell: bash
        run: |
          cd ./etc/
          python ci_package_tables.py
          cd ..

      - name: Run scripts plus processing script
        shell: bash
        run: |
          cd ./scripts/
          nosetests -v --with-id --with-timer ex-*
          python process-scripts.py
          cd ..

      - name: Build mf6examples LaTeX document
        shell: python
        run: |
          import sys
          import subprocess

          ws = "./doc/"
          bibnam = "mf6examples"
          texnam = bibnam + ".tex"
          args = (
                  ("pdflatex", texnam),
                  ("bibtex", bibnam),
                  ("pdflatex", texnam),
                  ("pdflatex", texnam),
                 )
          for arg in args:
              print("running command...'{}'".format(" ".join(arg)))
              with subprocess.Popen(arg,
                                    stdout=subprocess.PIPE,
                                    stderr=subprocess.STDOUT,
                                    cwd=ws) as process:
                  stdout, stderr = process.communicate(timeout=60)
                  if stdout:
                      stdout = stdout.decode()
                      print(stdout)
                  if stderr:
                      print("\n\nError condition occurred:\n")
                      stderr = stderr.decode()
                      print(stderr)

      - name: Rename and move the LaTeX document
        shell: bash
        run: |
          ls -l ./doc/
          mv ./doc/mf6examples.pdf mf6examples.pdf
          ls -l ./

      - name: Upload build artifacts for current release
        if:
          github.repository_owner == 'MODFLOW-USGS' && github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: current
          path: |
            ./mf6examples.pdf
            ./modflow6-examples.zip


  # make the release if the "build" job was successful
  release:
    name: Make the release
    needs: build
    runs-on: ubuntu-latest

    if: github.repository_owner == 'MODFLOW-USGS' && github.event_name == 'push'
    steps:
      - name: Checkout MODFLOW6 examples repo
        uses: actions/checkout@v2

      - name: Get Current Time
        uses: 1466587594/get-current-time@v2.0.0
        id: current-time
        with:
          format: MM/DD/YYYY HH:mm

      - name: Set current time as environmental variable
        env:
          TIME: "${{ steps.current-time.outputs.time }}"
          F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
        run: |
          echo "::set-env name=F_TIME::${{ steps.current-time.outputs.formattedTime }}"
          echo "::set-env name=TIME::${{ steps.current-time.outputs.time }}"
          echo $TIME
          echo $F_TIME
          echo "MODFLOW 6 examples: built at ${F_TIME}"

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: current
          path: ./current/

      - name: List files in the artifact directory
        shell: bash
        run: |
          pwd
          ls -l ./current/

      - name: create bodyFile
        shell: bash
        run: |
          echo "MODFLOW 6 examples: built "${F_TIME} > bodyFile
          cat bodyFile
          ls -l .

      - name: Delete the latest release
        uses: ame-yu/action-delete-latest-release@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create/Update the current release
        uses: ncipollo/release-action@v1
        with:
          tag: current
          name: current build
          bodyFile: ./bodyFile
          allowUpdates: true
          draft: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload compiled executables to the current GitHub release
        uses: svenstaro/upload-release-action@2.0.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./current/*
          tag: current
          overwrite: true
          file_glob: true

      - name: Delete Artifact
        uses: GeekyEggo/delete-artifact@v1.0.0
        with:
          name: current
